<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoGeneratedRunConfigurationManager">
    <projectFile profileName="IIS Express">ServerTest.csproj</projectFile>
    <projectFile profileName="http">ServerTest.csproj</projectFile>
    <projectFile profileName="https">ServerTest.csproj</projectFile>
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="3db05f2d-95a8-4847-b364-e98592771b84" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/../../.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/../../.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.dockerignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.ServerTest/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.ServerTest/.idea/encodings.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.ServerTest/.idea/externalDependencies.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.ServerTest/.idea/git_toolbox_blame.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.ServerTest/.idea/httpClient.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.ServerTest/.idea/httpRequests/2024-09-28T165304.200.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.ServerTest/.idea/httpRequests/http-client.cookies" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.ServerTest/.idea/httpRequests/http-requests-log.http" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.ServerTest/.idea/indexLayout.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.ServerTest/.idea/misc.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.ServerTest/.idea/sonarlint.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.idea.ServerTest/.idea/vcs.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/config/applicationhost.config" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Controllers/SuperheroController.cs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Controllers/WeatherForecastController.cs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Dockerfile" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Models/Superhero.cs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Program.cs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Properties/launchSettings.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/ServerTest.csproj" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/ServerTest.http" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/ServerTest.sln" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/ServerTest.sln.DotSettings" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/Service/DataContext.cs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/WeatherForecast.cs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/appsettings.Development.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/appsettings.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose.yml" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="DpaMonitoringSettings">
    <option name="autoShow" value="false" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/../.." />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;TiredAJ&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/TiredAJ/ServerTest&quot;,
    &quot;accountId&quot;: &quot;63577aea-23c9-4ceb-8613-8684bdb3b809&quot;
  }
}</component>
  <component name="HighlightingSettingsPerFile">
    <setting file="jar://$APPLICATION_HOME_DIR$/plugins/restClient/lib/restClient.jar!/com/intellij/ws/rest/client/requests/collection/get-requests.http" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$USER_HOME$/AppData/Local/Temp/whats-new-dir/whats-new.http" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/DecompilerCache/ILViewer/361d456d0ba24bb59461500bda69601db38b0/4f/706823ff/02000008pdb38.il" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/6fa05d7dbf2e454ce78b261b422234da1f1ccedee678fd997e5ef4afe6df6e/ControllerBase.cs" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$APPLICATION_CONFIG_DIR$/resharper-host/SourcesCache/8be3a835a33b22749161cd57a7225ef65e0c61c64c2bfd969e2e404130dd/Controller.cs" root0="SKIP_HIGHLIGHTING" />
  </component>
  <component name="HttpClientSelectedEnvironments">
    <file url="file://$USER_HOME$/AppData/Local/Temp/whats-new-dir/whats-new.http" environment="test" />
    <file url="jar://$APPLICATION_HOME_DIR$/plugins/restClient/lib/restClient.jar!/com/intellij/ws/rest/client/requests/collection/get-requests.http" environment="test" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2mhhwMEqU7gxMfXqoEE3jsAP67P" />
  <component name="ProjectLevelVcsManager">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    ".NET Launch Settings Profile.ServerTest: IIS Express.executor": "Run",
    "ASKED_SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "Docker.docker-compose.yml: Compose Deployment.executor": "Run",
    "HTTP Request.ServerTest | #1.executor": "Run",
    "HTTP Request.ServerTest-endpoints_2 | #1.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
    "SONARLINT_PRECOMMIT_ANALYSIS": "true",
    "git-widget-placeholder": "main",
    "settings.editor.selected.configurable": "preferences.pluginManager"
  }
}]]></component>
  <component name="RunManager" selected="Docker.docker-compose.yml: Compose Deployment">
    <configuration name="ServerTest | #1" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$PROJECT_DIR$/ServerTest.http" requestIdentifier="#1" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="ServerTest-endpoints_2 | #1" type="HttpClient.HttpRequestRunConfigurationType" factoryName="HTTP Request" temporary="true" nameIsGenerated="true" path="$APPLICATION_CONFIG_DIR$/scratches/ServerTest-endpoints_2.http" requestIdentifier="#1" runType="Run single request">
      <method v="2" />
    </configuration>
    <configuration name="ServerTest: IIS Express" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/ServerTest.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net9.0" />
      <option name="LAUNCH_PROFILE_NAME" value="IIS Express" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="ServerTest: http" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/ServerTest.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net9.0" />
      <option name="LAUNCH_PROFILE_NAME" value="http" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration name="ServerTest: https" type="LaunchSettings" factoryName=".NET Launch Settings Profile">
      <option name="LAUNCH_PROFILE_PROJECT_FILE_PATH" value="$PROJECT_DIR$/ServerTest.csproj" />
      <option name="LAUNCH_PROFILE_TFM" value="net9.0" />
      <option name="LAUNCH_PROFILE_NAME" value="https" />
      <option name="USE_EXTERNAL_CONSOLE" value="0" />
      <option name="USE_MONO" value="0" />
      <option name="RUNTIME_ARGUMENTS" value="" />
      <option name="GENERATE_APPLICATIONHOST_CONFIG" value="1" />
      <option name="SHOW_IIS_EXPRESS_OUTPUT" value="0" />
      <option name="SEND_DEBUG_REQUEST" value="1" />
      <option name="ADDITIONAL_IIS_EXPRESS_ARGUMENTS" value="" />
      <method v="2">
        <option name="Build" />
      </method>
    </configuration>
    <configuration default="true" type="docker-deploy" factoryName="docker-compose.yml" temporary="true">
      <deployment type="docker-compose.yml">
        <settings />
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="envFilePath" value="" />
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <EXTENSION ID="com.jetbrains.rider.docker.debug" isFastModeEnabled="true" isSslEnabled="false" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose.yml: Compose Deployment" />
        <item itemvalue="HTTP Request.ServerTest-endpoints_2 | #1" />
        <item itemvalue="HTTP Request.ServerTest | #1" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="3db05f2d-95a8-4847-b364-e98592771b84" name="Changes" comment="" />
      <created>1716034870931</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1716034870931</updated>
      <workItem from="1716034875737" duration="248000" />
      <workItem from="1717428353272" duration="355000" />
      <workItem from="1727534955804" duration="4057000" />
      <workItem from="1727539092153" duration="498000" />
    </task>
    <task id="LOCAL-00001" summary="Following tutorial but using postgres in docker">
      <option name="closed" value="true" />
      <created>1727539400583</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1727539400583</updated>
    </task>
    <option name="localTasksCounter" value="2" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_CODE_CLEANUP_BEFORE_PROJECT_COMMIT" value="true" />
    <option name="LOCAL_CHANGES_DETAILS_PREVIEW_SHOWN" value="false" />
    <option name="CLEAR_INITIAL_COMMIT_MESSAGE" value="true" />
    <MESSAGE value="Following tutorial but using postgres in docker" />
    <option name="LAST_COMMIT_MESSAGE" value="Following tutorial but using postgres in docker" />
    <option name="OPTIMIZE_IMPORTS_BEFORE_PROJECT_COMMIT" value="true" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DotNet Breakpoints">
          <url>file://$PROJECT_DIR$/Controllers/SuperheroController.cs</url>
          <line>15</line>
          <properties documentPath="E:\GitHub\ServerTest\Src\ServerTest\Controllers\SuperheroController.cs" containingFunctionPresentation="Method 'GetAllHeroes'">
            <startOffsets>
              <option value="458" />
            </startOffsets>
            <endOffsets>
              <option value="476" />
            </endOffsets>
          </properties>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>